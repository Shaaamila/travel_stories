{"version":3,"sources":["toast/toast.ts"],"names":[],"mappings":"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","file":"toast/toast.js","sourcesContent":["import {\n  Injectable,\n  ComponentRef,\n  DynamicComponentLoader,\n  ApplicationRef,\n  Inject,\n  ReflectiveInjector,\n  ViewContainerRef,\n  NgModule\n} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { ViewContainerRef_ } from '@angular/core/src/linker/view_container_ref';\nimport { MdToastComponent } from './toast.component';\n\n@Injectable()\nexport class MdToast {\n  private hideDelay: number = 3000;\n  private index: number = 0;\n\n  container: ComponentRef<any>;\n\n  private appRef: any;\n\n  constructor(private loader: DynamicComponentLoader, appRef: ApplicationRef) {\n    this.appRef = appRef;\n  }\n\n  /**\n   * show toast\n   * @param toastObj string or object with message and other properties of toast\n   */\n  show(toastObj: string | { message: string, hideDelay: number }) {\n    let toast: Toast;\n    if (typeof toastObj === 'string') {\n      toast = new Toast(toastObj);\n    } else if (typeof toastObj === 'object') {\n      toast = new Toast(toastObj.message);\n      this.hideDelay = toastObj.hideDelay;\n    }\n    if (toast) {\n      if (!this.container) {\n        let appElement: ViewContainerRef = new ViewContainerRef_(this.appRef['_rootComponents'][0]._hostElement);\n        let bindings = ReflectiveInjector.resolve([]);\n        this.loader.loadNextToLocation(MdToastComponent, appElement, bindings).then((ref: any) => {\n          this.container = ref;\n          this.setupToast(toast);\n        });\n      } else {\n        this.setupToast(toast);\n      }\n    }\n  }\n\n  /**\n   * toast timeout\n   * @param toastId\n   */\n  startTimeout(toastId: number) {\n    setTimeout(() => {\n      this.clear(toastId);\n    }, this.hideDelay);\n  }\n\n  /**\n   * setup toast\n   * @param toast\n   */\n  setupToast(toast: Toast) {\n    toast.id = ++this.index;\n    this.container.instance.add(toast);\n    this.startTimeout(toast.id);\n  }\n\n  /**\n   * clear all toast\n   * @param toastId\n   */\n  clear(toastId: number) {\n    if (this.container) {\n      let instance = this.container.instance;\n      instance.remove(toastId);\n      if (!instance.isToast()) { this.hide(); }\n    }\n  }\n\n  /**\n   * hide all or specific toasts\n   */\n  hide() {\n    this.container.destroy();\n    this.container = null;\n  }\n}\n\nexport class Toast {\n  id: number;\n  message: string;\n  constructor(message: string) { this.message = message; }\n}\n\nexport const ACCORDION_DIRECTIVES: any[] = [MdToastComponent];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: ACCORDION_DIRECTIVES,\r\n  declarations: ACCORDION_DIRECTIVES,\r\n  providers: [MdToast]\r\n})\r\nexport class MdToastModule { }\r\n"],"sourceRoot":"/source/"}